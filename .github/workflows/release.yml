name: Go Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.2

      - name: Build amd64
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags " -X 'main.GoVersion=$(go version)' -X main.GitCommit=$(git rev-parse HEAD) -X 'main.BuildTime=$(date +"%Y-%m-%d %H:%M:%S")'" -o China_Telecom_Monitor_amd64 ./cmd/main.go

      - name: Build arm64
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags " -X 'main.GoVersion=$(go version)' -X main.GitCommit=$(git rev-parse HEAD) -X 'main.BuildTime=$(date +"%Y-%m-%d %H:%M:%S")'" -o China_Telecom_Monitor_arm64 ./cmd/main.go

      - name: Archive binaries
        run: |
          tar czvf China_Telecom_Monitor_amd64.tar.gz China_Telecom_Monitor_amd64
          tar czvf China_Telecom_Monitor_arm64.tar.gz China_Telecom_Monitor_arm64

      - name: Generate Release Title and Body
        id: release_vars
        run: |
          echo "RELEASE_TITLE=Auto Release $(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
          echo "RELEASE_BODY=自动发布于 $(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "auto-main-${{ github.run_number }}"
          name: ${{ env.RELEASE_TITLE }}
          body: ${{ env.RELEASE_BODY }}
          files: |
            China_Telecom_Monitor_amd64.tar.gz
            China_Telecom_Monitor_arm64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}